// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MackerelContainerAgentDefinition add to task definition with only required props 1`] = `
Object {
  "Resources": Object {
    "TaskDefinitionB36D86D9": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "MACKEREL_APIKEY",
                "Value": "keep-my-secret",
              },
              Object {
                "Name": "MACKEREL_CONTAINER_PLATFORM",
                "Value": "ecs",
              },
            ],
            "Essential": true,
            "Image": "mackerel/mackerel-container-agent:latest",
            "Links": Array [],
            "LinuxParameters": Object {
              "Capabilities": Object {
                "Add": Array [],
                "Drop": Array [],
              },
              "Devices": Array [],
              "Tmpfs": Array [],
            },
            "MountPoints": Array [
              Object {
                "ContainerPath": "/host/sys/fs/cgroup",
                "ReadOnly": true,
                "SourceVolume": "cgroup",
              },
              Object {
                "ContainerPath": "/var/run/docker.sock",
                "ReadOnly": true,
                "SourceVolume": "docker_sock",
              },
            ],
            "Name": "mackerel-container-agent",
            "PortMappings": Array [],
            "Ulimits": Array [],
            "VolumesFrom": Array [],
          },
        ],
        "Family": "TaskDefinition",
        "NetworkMode": "bridge",
        "PlacementConstraints": Array [],
        "RequiresCompatibilities": Array [
          "EC2",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefinitionTaskRoleFD40A61D",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "Host": Object {
              "SourcePath": "/cgroup",
            },
            "Name": "cgroup",
          },
          Object {
            "Host": Object {
              "SourcePath": "/var/run/docker.sock",
            },
            "Name": "docker_sock",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefinitionTaskRoleFD40A61D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`MackerelContainerAgentDefinition specify ignoreContainer 1`] = `
Object {
  "Resources": Object {
    "TaskDefinitionB36D86D9": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "MACKEREL_APIKEY",
                "Value": "keep-my-secret",
              },
              Object {
                "Name": "MACKEREL_CONTAINER_PLATFORM",
                "Value": "ecs",
              },
              Object {
                "Name": "MACKEREL_IGNORE_CONTAINER",
                "Value": "(mackerel|xray)",
              },
            ],
            "Essential": true,
            "Image": "mackerel/mackerel-container-agent:latest",
            "Links": Array [],
            "LinuxParameters": Object {
              "Capabilities": Object {
                "Add": Array [],
                "Drop": Array [],
              },
              "Devices": Array [],
              "Tmpfs": Array [],
            },
            "MountPoints": Array [
              Object {
                "ContainerPath": "/host/sys/fs/cgroup",
                "ReadOnly": true,
                "SourceVolume": "cgroup",
              },
              Object {
                "ContainerPath": "/var/run/docker.sock",
                "ReadOnly": true,
                "SourceVolume": "docker_sock",
              },
            ],
            "Name": "mackerel-container-agent",
            "PortMappings": Array [],
            "Ulimits": Array [],
            "VolumesFrom": Array [],
          },
        ],
        "Family": "TaskDefinition",
        "NetworkMode": "bridge",
        "PlacementConstraints": Array [],
        "RequiresCompatibilities": Array [
          "EC2",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefinitionTaskRoleFD40A61D",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "Host": Object {
              "SourcePath": "/cgroup",
            },
            "Name": "cgroup",
          },
          Object {
            "Host": Object {
              "SourcePath": "/var/run/docker.sock",
            },
            "Name": "docker_sock",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefinitionTaskRoleFD40A61D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`MackerelContainerAgentDefinition volumes are not mounted when awsvpc / fargate 1`] = `
Object {
  "Resources": Object {
    "TaskDefinitionAwsVpc90383BD2": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "MACKEREL_APIKEY",
                "Value": "keep-my-secret",
              },
              Object {
                "Name": "MACKEREL_CONTAINER_PLATFORM",
                "Value": "ecs_awsvpc",
              },
            ],
            "Essential": true,
            "Image": "mackerel/mackerel-container-agent:latest",
            "Links": Array [],
            "LinuxParameters": Object {
              "Capabilities": Object {
                "Add": Array [],
                "Drop": Array [],
              },
              "Devices": Array [],
              "Tmpfs": Array [],
            },
            "MountPoints": Array [],
            "Name": "mackerel-container-agent-awsvpc",
            "PortMappings": Array [],
            "Ulimits": Array [],
            "VolumesFrom": Array [],
          },
        ],
        "Family": "TaskDefinitionAwsVpc",
        "NetworkMode": "awsvpc",
        "PlacementConstraints": Array [],
        "RequiresCompatibilities": Array [
          "EC2",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefinitionAwsVpcTaskRole20EF5F40",
            "Arn",
          ],
        },
        "Volumes": Array [],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefinitionAwsVpcTaskRole20EF5F40": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TaskDefinitionFargate8CDB15BB": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "MACKEREL_APIKEY",
                "Value": "keep-my-secret",
              },
              Object {
                "Name": "MACKEREL_CONTAINER_PLATFORM",
                "Value": "fargate",
              },
            ],
            "Essential": true,
            "Image": "mackerel/mackerel-container-agent:latest",
            "Links": Array [],
            "LinuxParameters": Object {
              "Capabilities": Object {
                "Add": Array [],
                "Drop": Array [],
              },
              "Devices": Array [],
              "Tmpfs": Array [],
            },
            "MountPoints": Array [],
            "Name": "mackerel-container-agent-fargate",
            "PortMappings": Array [],
            "Ulimits": Array [],
            "VolumesFrom": Array [],
          },
        ],
        "Cpu": "256",
        "Family": "TaskDefinitionFargate",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefinitionFargateTaskRoleD9798C07",
            "Arn",
          ],
        },
        "Volumes": Array [],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefinitionFargateTaskRoleD9798C07": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`MackerelContainerAgentDefinition with roles 1`] = `
Object {
  "Resources": Object {
    "TaskDefinitionB36D86D9": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "MACKEREL_APIKEY",
                "Value": "keep-my-secret",
              },
              Object {
                "Name": "MACKEREL_CONTAINER_PLATFORM",
                "Value": "ecs",
              },
              Object {
                "Name": "MACKEREL_ROLES",
                "Value": "My-service:db,My-service:proxy",
              },
            ],
            "Essential": true,
            "Image": "mackerel/mackerel-container-agent:latest",
            "Links": Array [],
            "LinuxParameters": Object {
              "Capabilities": Object {
                "Add": Array [],
                "Drop": Array [],
              },
              "Devices": Array [],
              "Tmpfs": Array [],
            },
            "MountPoints": Array [
              Object {
                "ContainerPath": "/host/sys/fs/cgroup",
                "ReadOnly": true,
                "SourceVolume": "cgroup",
              },
              Object {
                "ContainerPath": "/var/run/docker.sock",
                "ReadOnly": true,
                "SourceVolume": "docker_sock",
              },
            ],
            "Name": "mackerel-container-agent",
            "PortMappings": Array [],
            "Ulimits": Array [],
            "VolumesFrom": Array [],
          },
        ],
        "Family": "TaskDefinition",
        "NetworkMode": "bridge",
        "PlacementConstraints": Array [],
        "RequiresCompatibilities": Array [
          "EC2",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefinitionTaskRoleFD40A61D",
            "Arn",
          ],
        },
        "Volumes": Array [
          Object {
            "Host": Object {
              "SourcePath": "/cgroup",
            },
            "Name": "cgroup",
          },
          Object {
            "Host": Object {
              "SourcePath": "/var/run/docker.sock",
            },
            "Name": "docker_sock",
          },
        ],
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefinitionTaskRoleFD40A61D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
